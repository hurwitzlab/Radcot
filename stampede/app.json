{
    "name": "Bowtie-samtools",
    "version": "0.0.1",
    "shortDescription": "Bowtie-samtools is a fast short-read alignment program",
    "longDescription": "Bowtie-samtools:\n* Uses bowtie2 to align comma-separated lists of reads (paired or unpaired) to a bowtie2-indexed genome\n* If a bowtie2-indexed genome is not provided, one will be created from a directory of genome(s)\n* After alignment, samtools converts the *.sam file into *.bam format for downstream analysis.",
    "available": true,
    "checkpointable": false,
    "defaultMemoryPerNode": 32,
    "defaultProcessorsPerNode": 16,
    "defaultMaxRunTime": "24:00:00",
    "defaultNodeCount": 1,
    "defaultQueue": "normal",
    "deploymentPath": "scottdaniel/applications/bowtie-samtools-0.0.1/stampede",
    "deploymentSystem": "data.iplantcollaborative.org",
    "executionSystem": "tacc-stampede2-sdaniel",
    "executionType": "HPC",
    "helpURI": "http://bowtie-bio.sourceforge.net/bowtie2/index.shtml",
    "label": "Bowtie-samtools",
    "parallelism": "SERIAL",
    "templatePath": "template.sh",
    "testPath": "test.sh",
    "modules": [
        ""
    ],
    "tags": [
        ""
    ],
    "ontology": [
        "http://sswapmeet.sswap.info/agave/apps/Application"
    ],
    "inputs": [
        {
            "id": "GENOME_DIR",
            "value": {
                "default": "",
                "order": 1,
                "validator": "",
                "required": false,
                "visible": true,
                "enquote": false
            },
            "semantics": {
                "ontology": [
                    "http://sswapmeet.sswap.info/mime/application/X-fasta"
                ],
                "minCardinality": 0,
                "maxCardinality": -1,
                "fileTypes": [
                    "raw-0"
                ]
            },
            "details": {
                "description": "The Directory containing individual genomes that will be pasted together. The created genome.fna will be indexed for bowtie2.",
                "label": "genome-dir",
                "argument": "-g ",
                "repeatArgument": false,
                "showArgument": true
            }
        },
        {
            "id": "BT2_IDX",
            "value": {
                "default": "",
                "order": 2,
                "validator": "",
                "required": false,
                "visible": true,
                "enquote": false
            },
            "semantics": {
                "ontology": [
                    "http://sswapmeet.sswap.info/mime/application/X-bt2"
                ],
                "minCardinality": 0,
                "maxCardinality": -1,
                "fileTypes": [
                    "raw-0"
                ]
            },
            "details": {
                "description": "Index filename prefix (minus trailing .X.bt2). This will also be the name of the fasta file, E.g. [bt2-idx].fna. NOTE: Bowtie 1 and Bowtie 2 indexes are not compatible. ",
                "label": "bt2-idx",
                "argument": "-x ",
                "repeatArgument": false,
                "showArgument": true
            }
        },
        {
            "id": "M1",
            "value": {
                "default": "",
                "order": 3,
                "validator": "",
                "required": false,
                "visible": true,
                "enquote": true
            },
            "semantics": {
                "ontology": [
                    "http://sswapmeet.sswap.info/mime/application/X-fastq"
                ],
                "minCardinality": 0,
                "maxCardinality": -1,
                "fileTypes": [
                    "raw-0"
                ]
            },
            "details": {
                "description": "Files with #1 mates, paired with files in <m2>. Could be gzip'ed (extension: .gz) or bzip2'ed (extension: .bz2). <m1>, <m2>, <r> can be comma-separated lists (no whitespace) and can be specified many times.",
                "label": "m1",
                "argument": "",
                "repeatArgument": false,
                "showArgument": true
            }
        },
        {
            "id": "M2",
            "value": {
                "default": "",
                "order": 4,
                "validator": "",
                "required": false,
                "visible": true,
                "enquote": true
            },
            "semantics": {
                "ontology": [
                    "http://sswapmeet.sswap.info/mime/application/X-fastq"
                ],
                "minCardinality": 0,
                "maxCardinality": -1,
                "fileTypes": [
                    "raw-0"
                ]
            },
            "details": {
                "description": "Files with #2 mates, paired with files in <m1>. Could be gzip'ed (extension: .gz) or bzip2'ed (extension: .bz2). <-1>, <-2>, <-U> can be comma-separated lists (no whitespace) and can be specified many times.",
                "label": "m2",
                "argument": "",
                "repeatArgument": false,
                "showArgument": true
            }
        },
        {
            "id": "UNPAIRED",
            "value": {
                "default": "",
                "order": 5,
                "validator": "",
                "required": false,
                "visible": true,
                "enquote": true
            },
            "semantics": {
                "ontology": [
                    "http://sswapmeet.sswap.info/mime/application/X-fastq"
                ],
                "minCardinality": 0,
                "maxCardinality": -1,
                "fileTypes": [
                    "raw-0"
                ]
            },
            "details": {
                "description": "Files with unpaired reads. Could be gzip'ed (extension: .gz) or bzip2'ed (extension: .bz2). <-1>, <-2>, <-U> can be comma-separated lists (no whitespace) and can be specified many times.",
                "label": "unpaired",
                "argument": "",
                "repeatArgument": false,
                "showArgument": true
            }
        }
    ],
    "parameters": [
        {
            "id": "INPUT_FMT",
            "value": {
                "default": "fastq",
                "type": "enumeration",
                "order": 0,
                "required": false,
                "visible": true,
                "enquote": false,
                "enumValues": [
                    {
                        "fastq": "fastq"
                    },
                    {
                        "fasta": "fasta"
                    }
                ]
            },
            "details": {
                "description": "File format of reads to be aligned.",
                "label": "File extension.",
                "argument": "-f ",
                "repeatArgument": false,
                "showArgument": true
            }
        },
        {
            "id": "OUT_DIR",
            "value": {
                "default": "./",
                "type": "string",
                "order": 1,
                "required": false,
                "visible": true,
                "enquote": false,
                "validator": ""
            },
            "details": {
                "description": "Output directory to put all the results in.",
                "label": "Output Directory",
                "argument": "-O ",
                "repeatArgument": false,
                "showArgument": true
            }
        },
        {
            "id": "BAM_NAME",
            "value": {
                "default": "./bowtie2-run.bam",
                "type": "string",
                "order": 3,
                "required": false,
                "visible": true,
                "enquote": false,
                "validator": ""
            },
            "details": {
                "description": "BAM name, default = bowtie2-run.bam. Leave blank if you are inputting multiple reads as you will get BAM names based on reads names to keep replicates / samples separate",
                "label": "BAM name",
                "argument": "-n ",
                "repeatArgument": false,
                "showArgument": true
            }
        },
{
            "id": "LOGFILE",
            "value": {
                "default": "",
                "type": "string",
                "order": 3,
                "required": false,
                "visible": true,
                "enquote": false,
                "validator": ""
            },
            "details": {
                "description": "Log file name, will be taken from the read name",
                "label": "Log file name",
                "argument": "-l ",
                "repeatArgument": false,
                "showArgument": true
            }
        },
        {
            "id": "ALIGNMENT_TYPE",
            "value": {
                "default": "end-to-end",
                "type": "enumeration",
                "order": 4,
                "required": false,
                "visible": true,
                "enquote": false,
                "enumValues": [
                  { 
                    "end-to-end":"end-to-end" 
                  },
                  {
                    "local":"local"
                  }
                ]
            },
            "details": {
                "description": "Whether the entire read must align (end-to-end) or only a local region (local)",
                "label": "Local or global alignment",
                "argument": "-a ",
                "repeatArgument": false,
                "showArgument": true
            }
        },
        {
            "id": "END_TO_END_PRESETS",
            "value": {
                "default": "sensitive",
                "type": "enumeration",
                "order": 5,
                "required": false,
                "visible": true,
                "enquote": false,
                "enumValues": [
                    {
                        "very-fast": "-D 5 -R 1 -N 0 -L 22 -i S,0,2.50"
                    },
                    {
                        "fast": "-R 2 -N 0 -L 22 -i S,0,2.50"
                    },
                    {
                        "sensitive": "-D 15 -R 2 -N 0 -L 22 -i S,1,1.15"
                    }
                ]
            },
            "details": {
                "description": "End-to-end alignment presets. Only used if end-to-end alignment is selected. Default is sensitive",
                "label": "End-to-end alignment presets",
                "argument": "-e ",
                "repeatArgument": false,
                "showArgument": true
            }
        },
        {
            "id": "LOCAL_PRESETS",
            "value": {
                "default": "sensitive-local",
                "type": "enumeration",
                "order": 6,
                "required": false,
                "visible": true,
                "enquote": false,
                "enumValues": [
                    {
                        "very-fast-local": "-D 5 -R 1 -N 0 -L 25 -i S,1,2.00"
                    },
                    {
                        "fast-local": "-D 10 -R 2 -N 0 -L 22 -i S,1,1.75"
                    },
                    {
                        "sensitive-local": "-D 15 -R 2 -N 0 -L 20 -i S,1,0.75"
                    }
                ]
            },
            "details": {
                "description": "Local alignment presets. Only used if local alignment is selected. Default is sensitive-local",
                "label": "Local alignment presets",
                "argument": "-L ",
                "repeatArgument": false,
                "showArgument": true
            }
        },
        {
            "id": "NON_DETERMINISTIC",
            "value": {
                "default": false,
                "type": "bool",
                "order": 7,
                "required": false,
                "visible": true,
                "enquote": false,
                "validator": ""
            },
            "details": {
                "description": "Bowtie 2 will use the current time to re-initialize the pseudo-random number generator. Useful when the input consists of many identical reads",
                "label": "Use non-deterministic method.",
                "argument": "-N ",
                "repeatArgument": false,
                "showArgument": true
            }
        },
        {
            "id": "TRIM5",
            "value": {
                "default": 0,
                "type": "number",
                "order": 8,
                "required": false,
                "visible": true,
                "enquote": false,
                "validator": ""
            },
            "details": {
                "description": "Trim X bases from 5'/left end of reads.",
                "label": "Trim 5' bases.",
                "argument": "-5 ",
                "repeatArgument": false,
                "showArgument": true
            }
        },
        {
            "id": "TRIM3",
            "value": {
                "default": 0,
                "type": "number",
                "order": 9,
                "required": false,
                "visible": true,
                "enquote": false,
                "validator": ""
            },
            "details": {
                "description": "Trim X bases from 3'/right end of reads.",
                "label": "Trim 3' bases.",
                "argument": "-3 ",
                "repeatArgument": false,
                "showArgument": true
            }
        },
        {
            "id": "MINFRAGLEN",
            "value": {
                "default": 0,
                "type": "number",
                "order": 10,
                "required": false,
                "visible": true,
                "enquote": false,
                "validator": ""
            },
            "details": {
                "description": "Minimum fragment length.",
                "label": "Minimum fragment length.",
                "argument": "-I ",
                "repeatArgument": false,
                "showArgument": true
            }
        },
        {
            "id": "MAXFRAGLEN",
            "value": {
                "default": 2000,
                "type": "number",
                "order": 11,
                "required": false,
                "visible": true,
                "enquote": false,
                "validator": ""
            },
            "details": {
                "description": "Maximum fragment length.",
                "label": "Maximum fragment length.",
                "argument": "-X ",
                "repeatArgument": false,
                "showArgument": true
            }
        },
        {
            "id": "THREADS",
            "value": {
                "default": 12,
                "type": "number",
                "order": 12,
                "required": false,
                "visible": true,
                "enquote": false,
                "validator": ""
            },
            "details": {
                "description": "The number of computation threads to use for both bowtie2 and samtools",
                "label": "threads",
                "argument": "-t ",
                "repeatArgument": false,
                "showArgument": true
            }
        },
        {
            "id": "ADDITIONAL",
            "value": {
                "default": "",
                "type": "string",
                "order": 13,
                "required": false,
                "visible": true,
                "enquote": false,
                "validator": ""
            },
            "details": {
                "description": "Additional arguments to pass to bowtie2. Put options in single quotes to protect from shell.",
                "label": "additional",
                "argument": "-A ",
                "repeatArgument": false,
                "showArgument": true
            }
        }
    ],
    "outputs": []
}
